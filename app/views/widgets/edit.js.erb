// Create orientation widget
(function() {
  jQuery(document).ready(function($) {
    var gitshoesCloneInsert = $("<div id='feedback-clone'><div id='feedback-clone-gitshoes-button'></div></div>");
    gitshoesCloneInsert.css({
      "z-index": "900",
      "position": "absolute",
      "<%= @widget.orientation %>": "<%= ((@widget.offset.split(/[^\d|.]/).join.to_i) / 2.0).to_s + 'px' %>",
      "<%= @widget.edge %>": 0,
      "width": "<%= @widget.form_width %>"
    });
    gitshoesCloneInsert.appendTo(jQuery('.widget-view'));

    var gitshoesCloneFloater = $('#feedback-clone-gitshoes-button')
    gitshoesCloneFloater.text("<%= @widget.tab_text %>");
    gitshoesCloneFloater.css({
      "width": "<%= ((@widget.tab_width.split(/[^\d|.]/).join.to_i) / 2.0).to_s + 'px' %>",
      "height": "<%= ((@widget.tab_height.split(/[^\d|.]/).join.to_i) / 2.0).to_s + 'px' %>",
      "line-height": "<%= ((@widget.tab_line_height.split(/[^\d|.]/).join.to_i) / 2.0).to_s + 'px' %>",
      "margin": "<%= ((@widget.tab_margin.split(/[^\d|.]/).join.to_i) / 2.0).to_s + 'px' %>",
      "font-size": "<%= ((@widget.tab_font_size.split(/[^\d|.]/).join.to_i) / 2.0).to_s + 'px' %>",
      "text-align": "<%= @widget.tab_text_align %>",
      "padding": "<%= ((@widget.tab_padding.split(' ').map{ |x| ((x.split(/[^\d|.]/).join.to_i) / 2).to_s + 'px' }.join(' '))) %>",
      "border-top-left-radius": "<%= ((@widget.form_border_radius.split(/[^\d|.]/).join.to_i) / 2.0).to_s + 'px' %>",
      "border-top-right-radius": "<%= ((@widget.form_border_radius.split(/[^\d|.]/).join.to_i) / 2.0).to_s + 'px' %>",
      "background-color": "<%= @widget.tab_background_color %>",
      "color": "<%= @widget.tab_font_color %>",
      "cursor": "<%= @widget.tab_cursor %>",
      "float": "<%= @widget.orientation %>",
      "font-family": "<%= @widget.tab_font %>",
      "display": "<%= @widget.tab_display %>"
    });

    var gitshoesCloneFormDiv = $("<div id='gitshoes-clone-form'></div>");
    gitshoesCloneFormDiv.css({
      "padding": "5px 20px 5px 20px",
      "background-color": "<%= @widget.form_background_color %>",
      "width": "<%= @widget.form_width %>",
      "float": "<%= @widget.orientation %>",
      "border": "<%= @widget.form_border_thickness %> <%= @widget.form_border_type %> <%= @widget.form_border_color %>",
      "border-top-left-radius": "<%= @widget.tab_edge_radius %>",
      "font-size": "<%= @widget.body_font_size %>",
      "color": "<%= @widget.body_font_color %>",
      "font-family": "<%= @widget.body_font %>"
    });
    gitshoesCloneFormDiv.appendTo('#feedback-clone');

    //save formDiv in a variable
    var gitshoesCloneFormDiv = jQuery('#gitshoes-clone-form');
    gitshoesCloneFormDiv.css({"display": "none"});

    // ajax starts here
    var gitshoesCloneFormUrl = "<%= new_repo_issue_url(@repo) %>";
    jQuery.ajax({
      url:       gitshoesCloneFormUrl,
      dataType:  "html",
      success:   function(data) {
        // Must namespace form inputs
        gitshoesCloneFormDiv.html(data)
        gitshoesCloneFormDiv.find('#new_issue').attr('id', 'clone-new-issue');
        feedbackCloneNewIssue = jQuery('#clone-new-issue');
        feedbackCloneNewIssue.find('#issue_email').attr('id', 'feedback-clone-issue-email');
        feedbackCloneNewIssue.find('#issue_title').attr('id', 'feedback-clone-issue-title');
        feedbackCloneNewIssue.find('#issue_system').attr('id', 'feedback-clone-issue-system');
        feedbackCloneNewIssue.find('#issue_system').attr('id', 'feedback-clone-issue-system');
        feedbackCloneNewIssue.find('#feedback-submit').attr('id', 'feedback-clone-feedback-submit').attr('type', 'button');
        feedbackCloneNewIssue.find('#feedback-clone-feedback-submit').css('color', "<%= @widget.button_color %>");
        feedbackCloneNewIssue.find('#feedback-clone-feedback-submit').css('background-color', "<%= @widget.button_background_color %>");
        feedbackCloneNewIssue.find('#issue_body').attr('id', 'feedback-clone-issue-body');
        feedbackCloneNewIssue.find('#issue_data_image').attr('id', 'feedback-clone-issue-data-image');

        $("form#clone-new-issue").css({
          "margin": "0"
        });
      }
    });
  });
})();

// Create zoom widget
(function() {
  jQuery(document).ready(function($) {
    var gitshoesCloneZoomInsert = $("<div id='feedback-clone-zoom'><div id='feedback-clone-zoom-gitshoes-button'></div></div>");
    gitshoesCloneZoomInsert.css({
      "z-index": "900",
      "position": "absolute",
      "<%= @widget.orientation %>": "<%= @widget.offset %>",
      "<%= @widget.edge %>": 0,
      "width": "<%= @widget.form_width %>"
    });
    gitshoesCloneZoomInsert.appendTo(jQuery('.widget-view-zoom'));

    var gitshoesCloneZoomFloater = $('#feedback-clone-zoom-gitshoes-button')
    gitshoesCloneZoomFloater.text("<%= @widget.tab_text %>");
    gitshoesCloneZoomFloater.css({
      "width": "<%= @widget.tab_width %>",
      "height": "<%= @widget.tab_height %>",
      "line-height": "<%= @widget.tab_line_height %>",
      "margin": "<%= @widget.tab_margin %>",
      "font-size": "<%= @widget.tab_font_size %>",
      "text-align": "<%= @widget.tab_text_align %>",
      "padding": "<%= @widget.tab_padding %>",
      "border-top-left-radius": "<%= @widget.form_border_radius %>",
      "border-top-right-radius": "<%= @widget.form_border_radius %>",
      "background-color": "<%= @widget.tab_background_color %>",
      "color": "<%= @widget.tab_font_color %>",
      "cursor": "<%= @widget.tab_cursor %>",
      "float": "<%= @widget.orientation %>",
      "font-family": "<%= @widget.tab_font %>",
      "display": "<%= @widget.tab_display %>"
    });

    var gitshoesCloneZoomFormDiv = $("<div id='gitshoes-clone-zoom-form'></div>");
    gitshoesCloneZoomFormDiv.css({
      "padding": "5px 20px 5px 20px",
      "background-color": "<%= @widget.form_background_color %>",
      "width": "<%= @widget.form_width %>",
      "float": "<%= @widget.orientation %>",
      "border": "<%= @widget.form_border_thickness %> <%= @widget.form_border_type %> <%= @widget.form_border_color %>",
      "border-top-left-radius": "<%= @widget.tab_edge_radius %>",
      "font-size": "<%= @widget.body_font_size %>",
      "color": "<%= @widget.body_font_color %>",
      "font-family": "<%= @widget.body_font %>"
    });
    gitshoesCloneZoomFormDiv.appendTo('#feedback-clone-zoom');

    //save formDiv in a variable
    var gitshoesCloneZoomFormDiv = jQuery('#gitshoes-clone-zoom-form');
    gitshoesCloneZoomFormDiv.css({"display": "none"});

    // ajax starts here
    var gitshoesCloneZoomFormUrl = "<%= new_repo_issue_url(@repo) %>";
    jQuery.ajax({
      url:       gitshoesCloneZoomFormUrl,
      dataType:  "html",
      success:   function(data) {
        // Must namespace form inputs
        gitshoesCloneZoomFormDiv.html(data)
        gitshoesCloneZoomFormDiv.find('#new_issue').attr('id', 'clone-zoom-new-issue');
        feedbackCloneZoomNewIssue = jQuery('#clone-zoom-new-issue');
        feedbackCloneZoomNewIssue.find('#issue_email').attr('id', 'feedback-clone-zoom-issue-email');
        feedbackCloneZoomNewIssue.find('#issue_title').attr('id', 'feedback-clone-zoom-issue-title');
        feedbackCloneZoomNewIssue.find('#issue_system').attr('id', 'feedback-clone-zoom-issue-system');
        feedbackCloneZoomNewIssue.find('#issue_system').attr('id', 'feedback-clone-zoom-issue-system');
        feedbackCloneZoomNewIssue.find('#feedback-submit').attr('id', 'feedback-clone-zoom-feedback-submit').attr('type', 'button');
        feedbackCloneZoomNewIssue.find('#feedback-clone-zoom-feedback-submit').css('color', "<%= @widget.button_color %>");
        feedbackCloneZoomNewIssue.find('#feedback-clone-zoom-feedback-submit').css('background-color', "<%= @widget.button_background_color %>");
        feedbackCloneZoomNewIssue.find('#issue_body').attr('id', 'feedback-clone-zoom-issue-body');
        feedbackCloneZoomNewIssue.find('#issue_data_image').attr('id', 'feedback-clone-zoom-issue-data-image');

        $("form#clone-zoom-new-issue").css({
          "margin": "0"
        });
      }
    });
    gitshoesCloneZoomFormDiv.delay( 800 ).slideDown( 500 );
  });
})();
